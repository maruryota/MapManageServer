#ifndef MapManage_idl
#define MapManage_idl


#include "BasicDataType.idl"
#include "ExtendedDataTypes.idl"
#include "InterfaceDataTypes.idl"


module Mapper{

	struct MapId {
		/// x position of splited map 
		unsigned int x;
		/// y position of splited map
		unsigned int y;
	};

	typedef sequence<MapId> MapIdList;

	struct OGSplitMapConfig {
		/// Scale on the x axis (meters per cell)
		double xScale;
		/// Scale on the y axis (meters per cell)
		double yScale;
		// number of cells along the x axis
		unsigned long width;
		// number of cells along the y axis
		unsigned long height;

	};

	struct OGSplitMap {
		Time tm;
		MapId mapId;
		OGSplitMapConfig config;
		OGMapTile map;
	};

	typedef sequence<OGSplitMapConfig> OGSpliteMapList;

	/*!
	 * @interface OGMapper
	 * @brief Occupancy Grid Map Builder Service Interface
	 */

	interface OGSplitedMapServer {
		RTC::RETURN_VALUE initializeMapOrigin(in TimedPose2D origin)
		RTC::RETURN_VALUE requestCurrentBuildMap(in MapIdList mapids in TimedPose2D currentRelativePose out OGSplitMapList)
    };
};

#endif